<template>
  <wxc-mask status="{{maskStatus}}"></wxc-mask>
  <view class="popup popup__status--{{status}} popup__content-align--{{align}} popup__status--{{status}}--animotion-{{animationMode}}" bindtap="hide">
    <slot></slot>
  </view>
</template>

<script>
export default {
  config: {
    usingComponents: {
      'wxc-mask': '@minui/wxc-mask'
    }
  },
  behaviors: [],
  properties: {
    animationMode: {
      type: String,
      value: 'none'
    },
    align: {
      type: String,
      value: 'center'
    },
    status: {
      type: String,
      value: 'hide'
    }
  },
  data: {
    maskStatus: 'hide'
  },
  ready() {
    this.properties.status === 'show' && this.showMask()
  },
  methods: {
    showMask() {
      this.setData({
        maskStatus: 'show'
      });
    },
    hideMask() {
      this.setData({
        maskStatus: 'hide'
      });
    },
    show() {

      if (this.data.animationMode !== 'none') {
        this.showMask();
        this.setData({
          status: 'fadeIn'
        });

        setTimeout(() => {
          this.setData({
            status: 'show'
          });
        }, 50)
      } else {
        this.showMask();
        this.setData({
          status: 'show'
        });
      }
    },
    forceHide() {
      this.setData({
        status: 'hide'
      });
      this.hideMask();
    },
    hide() {

      if (this.data.animationMode !== 'none') {
        this.setData({
          status: 'fadeOut'
        });

        clearTimeout(this._timer);

        this._timer = setTimeout(() => {
          this.forceHide();
        }, 300)

      } else {
        // 没有动画
        this.forceHide();
      }
    },
    onContentTap() {}
  }
}


</script>

<style lang="pcss">
@b popup {
  position: fixed;
  z-index: 200000;
  width: 100%;
  height: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  overflow: hidden;

  @e status {
    @m hide {
      display: none;
    }
    @m show {
      display: flex;
      transition: all 300ms linear;
    }
    @m fadeOut {
      display: flex;
      transition: all 300ms linear;

      @m animotion-none {}
      @m animotion-center {
        width: 0;
        height: 0;
      }
      @m animotion-top {
        top: -100%;
      }
      @m animotion-bottom {
        transform: translate(-50%, 50%);
      }
      @m animotion-left {
        left: -100%;
      }
      @m animotion-right {
        transform: translate(50%, -50%);
      }
    }
    @m fadeIn {
      display: flex;

      @m animotion-none {}
      @m animotion-center {
        width: 0;
        height: 0;
      }
      @m animotion-top {
        top: -100%;
      }
      @m animotion-bottom {
        transform: translate(-50%, 50%);
      }
      @m animotion-left {
        left: -100%;
      }
      @m animotion-right {
        transform: translate(50%, -50%);
      }
    }
  }
  @e content-animotion {}
  @e content-align {
    @m center {
      align-items: center;
      justify-content: center;
    }
    @m top {
      align-items: flex-start;
      justify-content: center;
    }
    @m bottom {
      align-items: flex-end;
      justify-content: center;
    }
    @m left {
      align-items: center;
      justify-content: flex-start;
    }
    @m right {
      align-items: center;
      justify-content: flex-end;
    }
  }
}
</style>
