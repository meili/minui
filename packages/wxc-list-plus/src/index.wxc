<style>
.lp-container {
  width: 100%;
  display: flex;
  flex-direction: column;
}
.lp-container-row {
  display: flex;
  flex-direction: row;
}
.lp-list-item {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  border-radius: 20rpx;
  background: white;
  margin: 10rpx;
  padding: 10rpx;
}
.lp-list-item-row {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 20rpx;
  background: white;
  margin: 10rpx;
  padding: 10rpx;
}
.lp-list-img {
  flex: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.lp-list-img-row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.lp-list-image {
  width: 200rpx;
  height: 200rpx;
  padding: 20rpx;
}
.lp-list-image-row {
  width: 180rpx;
  height: 180rpx;
}
.lp-list-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-left: 10rpx;
}
.lp-content-header {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.lp-content-header-row {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.lp-content-type {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
}
.lp-content-type-row {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}
.lp-content-desc {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  margin-top: 10rpx;
}
.lp-content-title-word {
  font-size: 1.2em;
}
.lp-content-title-word-row {
  font-size: 1em;
}
.lp-content-count-word {
  font-size: 0.8em;
}
.lp-content-type-word {
  font-size: 1em;
  margin-right: 20rpx;
}
.lp-content-type-word-row {
  font-size: 0.8em;
  margin: 5rpx;
}
.lp-content-desc-word {
  font-size: 0.8em;
}
</style>

<template>
  <view>
    <view  class="lp-container" wx:if="{{direction=='column'}}">
      <view class="lp-list-item"  wx:for="{{games}}" wx:for-item="game" data-id="{{game.id}}" bindtap="onClick">
        <view class="lp-list-img">
          <image class="lp-list-image" mode="aspectFill" src="{{game.url}}"/>
        </view>
        <view class="lp-list-content">
            <view class="lp-content-header">
              <lable class="lp-content-title-word">{{game.title}}</lable>
              <lable class="lp-content-count-word">{{game.playCount}}个宝贝玩过</lable>
            </view>
            <view class="lp-content-type">
              <wxc-label class="lp-content-type-word" type="fill"  wx:for="{{game.tags}}" wx:for-item="tag" type-color="{{tag.color}}">{{tag.name}}</wxc-label>
            </view>
            <view class="lp-content-desc">
              <lable class="lp-content-desc-word" >{{game.desc}}</lable>
            </view>
        </view>
      </view>
    </view>
    
    <view  class="lp-container-row" wx:if="{{direction=='row'}}">
      <view class="lp-list-item-row"  wx:for="{{games}}" wx:for-item="game" data-id="{{game.id}}" bindtap="onClick">
        <view class="lp-list-img-row">
          <image class="lp-list-image-row" mode="aspectFill" src="{{game.url}}"/>
        </view>
        <view class="lp-content-header-row">
          <lable class="lp-content-title-word-row">{{game.title}}</lable>
        </view>
        <view class="lp-content-type-row">
          <wxc-label class="lp-content-type-word-row" type="fill"  wx:for="{{game.tags}}" wx:for-item="tag" type-color="{{tag.color}}">{{tag.name}}</wxc-label>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  config: {
    usingComponents: {
      'wxc-label': '@minui/wxc-label'
    }
  },
  behaviors: [],
  properties: {
    direction: {
      type: String,
      value: 'column'
    },
    games: {
      type: Array,
      value: []
    }
  },
  data: {},
  methods: {
    onClick(event) {
      let detail = event.currentTarget.dataset.id;
      let option = {};
      this.triggerEvent('click', detail, option);
    }
  }
}


</script>

